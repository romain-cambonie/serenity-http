name: Release and publish packages

on:
  workflow_dispatch:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  node version: 'lts/*'
  package-manager: 'yarn'
  package-manager-dependencies-command: 'yarn install --frozen-lockfile'

jobs:
  dynamic-variables:
    outputs:
      node-version: ${{ steps.variables.outputs.node-version }}
      package-manager: ${{ steps.variables.outputs.package-manager }}
      package-manager-dependencies-command: ${{ steps.variables.outputs.package-manager-dependencies-command }}
      npm-package-scope: ${{ steps.variables.outputs.npm-package-scope }}

    runs-on: ubuntu-latest
    steps:
      - name: Var
        run: env

      - name: Interpolated variables from env variables
        id: variables
        run: |
          echo "::set-output name=node-version::${{ env.node-version }}"
          echo "::set-output name=package-manager::${{ env.package-manager }}"
          echo "::set-output name=package-manager-dependencies-command::${{ env.package-manager-dependencies-command }}"
          echo "::set-output name=npm-package-scope::${{ env.npm-package-scope }}"

  build:
    runs-on: ubuntu-latest
    needs:
      - dynamic-variables

    steps:
      - name: Checkout client-application repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.dynamic-variables.outputs.node-version }}
          cache: ${{ needs.dynamic-variables.outputs.package-manager }}

      - name: Install frozen dependencies
        run: ${{ needs.dynamic-variables.outputs.package-manager-dependencies-command }}

      - name: Build
        run: |
          ${{ needs.dynamic-variables.outputs.package-manager }} build

      - name: Upload build bundle as artifact
        uses: actions/upload-artifact@v3
        with:
          name: lib
          path: |
            lib

  validation:
    needs:
      - dynamic-variables
    uses: ./.github/workflows/_validation.reusable.yml
    with:
      node-version: ${{ needs.dynamic-variables.outputs.node-version }}
      package-manager: ${{ needs.dynamic-variables.outputs.package-manager }}

  publish:
    name: Publish public package on npm
    runs-on: ubuntu-latest
    needs:
      - dynamic-variables
      - build
      - validation

    steps:
      # For now limit to master branch for commit and history
      - name: Checkout repo with complete history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.dynamic-variables.outputs.node-version }}

      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: lib

      # Using a symbolic link because there is no base option to have a config path with semantic-release as of 2022-08-31
      - name: Link the semantic release config and release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NODE_AUTOMATION_TOKEN }}
        run: |
          ln -s .tooling/.semantic-release/.semantic-release.config.cjs release.config.cjs
          ln -s .tooling/.semantic-release/.npmignore .npmignore
          npx semantic-release
