name: Validation

# TODO Limit to prefixed branches, ignore tagged branch or setup output to make release and publish trigger it
on:
  workflow_dispatch:
  push:
    branches-ignore:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  node version: 'lts/*'
  package-manager: 'yarn'
  package-manager-dependencies-command: 'yarn install --frozen-lockfile'

jobs:
  dynamic-variables:
    outputs:
      node-version: ${{ steps.variables.outputs.node-version }}
      package-manager: ${{ steps.variables.outputs.package-manager }}
      package-manager-dependencies-command: ${{ steps.variables.outputs.package-manager-dependencies-command }}

    runs-on: ubuntu-latest
    steps:
      - name: Interpolated variables from env variables
        id: variables
        run: |
          echo "::set-output name=node-version::${{ env.node-version }}"
          echo "::set-output name=package-manager::${{ env.package-manager }}"
          echo "::set-output name=package-manager-dependencies-command::${{ env.package-manager-dependencies-command }}"

  build:
    runs-on: ubuntu-latest
    needs:
      - dynamic-variables

    steps:
      - name: Checkout client-application repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.dynamic-variables.outputs.node-version }}
          cache: ${{ needs.dynamic-variables.outputs.package-manager }}

      - name: Install frozen dependencies
        run: ${{ needs.dynamic-variables.outputs.package-manager-dependencies-command }}

      - name: Build
        run: |
          ${{ needs.dynamic-variables.outputs.package-manager }} build

      - name: Upload build bundle as artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-bundle
          path: |
            lib

  validation:
    needs:
      - dynamic-variables
    uses: ./.github/workflows/_validation.reusable.yml
    with:
      node-version: ${{ needs.dynamic-variables.outputs.node-version }}
      package-manager: ${{ needs.dynamic-variables.outputs.package-manager }}
      package-manager-dependencies-command: ${{ needs.dynamic-variables.outputs.package-manager-dependencies-command }}
